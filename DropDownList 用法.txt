 搭配ViewBag
            #1  @Html.DropDownList("DepartmentId", ViewBag.DtListItem as SelectList, "-= 請選擇 = -",
                                           new { @class = "form-control", @onChange = "SelectedValue(this)" })
            <!-- 透過 ViewBag傳過來，所以檢視畫面的第一列，不需搭配任何 model -->

            <br /><br />
            直接寫ViewBag名稱。控制器裡面的程式 -  ViewBag.<b>DtListItem</b><br />
            #2  @Html.DropDownList("DtListItem")

            <br /><hr />
            <br /><br />

            @@Html.DropDownList<font color="red">For</font>的寫法，請注意看後面「HTML屬性」的寫法

            <br /><br />  寫死的（固定、手動撰寫子選項）                    <!-- *******************************************  -->
            #3  @Html.DropDownListFor(model => model.DepartmentId, new SelectList(new[] { "男", "女", "不願回答" }),
                                 new { @class = "form-control", @onChange = "SelectedValue(this)" })


            <br /><br />  搭配ViewBag
            #4  @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DtListItem as SelectList,
                                 new { @class = "form-control", @onChange = "SelectedValue(this)" })


            <br /><br /><br />
            把這段程式碼，另外寫在 Class1.cs 裡面。不寫在控制器裡面。<br />
            <!-- **************************************************************************************** -->
            @{
                var x = new WebApplication1.ModelsDropDownList.Class1();
            }

            #5  @Html.DropDownList("DepartmentId", x.GetDDL() as SelectList, "-= 請選擇 = -",
                                                   new { @class = "form-control", @onChange = "SelectedValue(this)" })
            <!-- 透過 ViewBag傳過來，所以檢視畫面的第一列，不需搭配任何 model -->


            

    public class Class1
    {

        public SelectList GetDDL()
        {
            using (MVC_UserDB3Context _db = new MVC_UserDB3Context())
            {
                // 直接連結一個資料表，當作 DropDownList的資料來源。
                var dt = _db.DepartmentTable2s.ToList();   // 這一列改成 ADO.NET程式，就能到資料庫撈取您要的數據
                //                                                *********
                //如果您不寫最後的 .ToList()的話，會出現錯誤訊息 --無法完成作業，因為 DbContext 已被處置了。

                SelectList listItems = new SelectList(dt, "DepartmentId", "DepartmentName");
                // 先寫 <option>子選項的 value，再寫 text
                // 詳見  https://msdn.microsoft.com/zh-tw/library/dd505286(v=vs.118).aspx

                return listItems;
            }
        }



    }


eum 寫法

  (1).新版MVC v5.1 增加的新功能。--
                    @Html.EnumDropDownListFor(model => model.UserSex)

                    <br /><br />

                    @* 以下兩種寫法，資料來源 https://stackoverflow.com/questions/388483/how-do-you-create-a-dropdownlist-from-an-enum-in-asp-net-mvc  *@
                    (2).DropDownList --
                    @Html.DropDownList("UserSex",
              new SelectList(Enum.GetValues(typeof(WebApplication1.ModelsDropDownList.Gender))), "-=請選擇(1)=-")

                    （這兩種寫法，無法使用 [Display(Name=...)]的功能）
                    <br /><br />

                    (3).DropDownListFor --
                    @Html.DropDownListFor(model => model.UserSex,
              new SelectList(Enum.GetValues(typeof(WebApplication1.ModelsDropDownList.Gender))), "-=請選擇(2)=-")


       [StringLength(1)]
        [Display(Name = "性別（UserSex）")]
        //public string UserSex { get; set; }    // 原本預設的屬性

        ////***************************************************************************
        ////***  修改重點！！  *******************************************************
        //// 搭配 DropDownList控制器 底下的  Create6動作    
        //// http://www.tutorialsteacher.com/mvc/htmlhelper-dropdownlist-dropdownlistfor
        public Gender UserSex { get; set; }    // 請搭配最下方的 public enum Gender
        ////***************************************************************************


    public enum Gender
    {   // 列舉程式名稱中不能包含空白字元。https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/keywords/enum
        [Display(Name = "男（Male）")]
        M,      // 男性，Male。搭配下拉式選單，如果不寫[Display(Name=...)]，預設第一個選項的 value = 0
        [Display(Name = "女（Female）")]
        F        // 女性，Female
    }