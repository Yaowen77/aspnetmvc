    <script type="text/javascript">
        //上方，第一號下拉式選單，名為 DepartmentId
        //下方，第二號下拉式選單，名為 UserId  (以傳統HTML表單的寫法來做，<select>)
        $(document).ready(function () {
            $('#OrderID').change(function () {
            // 第一號下拉式選單若被點選，第二號就重新填入新的「子選項」。

                var userSelectId = $.trim($('#OrderID option:selected').val());
                $('#ProductID').empty();  // 清空第二號 下拉式選單

            if (userSelectId.length == 0) {
                $('#ProductID').append($('<option></option>').val('').text('-= 請選擇 =-'));
            }
            else {
                $.ajax( {    // jQuery AJAX 參考資料 http://api.jquery.com/jquery.ajax/
                        url: "@Url.Content("~/DropDownList2/GetUserTable2")",   // 記得 URL網址 前後用雙引號（"）包起來
                        data: { id: userSelectId },  // 傳給上面URL網址的數值
                        type: 'post',
                        cache: false,
                        async: false,
                        dataType: 'html',   // 可改成 text
                    success: function (data) {
                            if (data.length > 0) {
                                //*******************************************
                                // 如果有傳回資料，就把資料 <option>放入 第二號下拉式選單底下，當成子選項。
                                $('#ProductID').append(data);
                                //*******************************************
                        }   },   // success end
                        error: function () {
                            alert('例外狀況，AJAX有問題∼∼');
                            // AJAX Error 請看 https://stackoverflow.com/questions/12734714/jquery-ajax-error-handling-http-status-codes
                        }   // error end
                    });   // ajax end
            }  // if end

            });  // .change() end
        });
    </script>




 <select id="ProductID" name="ProductID"></select>










      [HttpPost]       //本動作需要搭配上一個 Create1動作，一起使用
        // 測試網址  /DropDownList2/GetUserTable?id=4
        //public string GetUserTable(string id)   // 自己測試用的
        public ActionResult GetUserTable2(string id)
        {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();   // 需要 System.Text命名空間
            if (!string.IsNullOrWhiteSpace(id))
            {
                int i = Convert.ToInt32(id);
                var result = _db2.Order_Details.Where(u => u.OrderID == i);

                //// 注意！如果後面不加上 .AsEnumerable()，就會報錯！
                //// 錯誤訊息 - LINQ to Entities 無法辨識方法 'Int32 Parse(System.String)' 方法，而且這個方法無法轉譯成存放區運算式。
                //foreach (var r in result.AsEnumerable())
                //{   //                           *******************
                foreach (var r in result)   // 2018/8/13註解： 沒這一段也正常
                {   // 組合字串，此結果將都丟往檢視畫面上，做下拉式選單的「子選項」
                    sb.AppendFormat("<option value=\"{0}\">{1}</option>",
                                       r.ProductID.ToString(),
                                       r.Product);
                }
            }
            return Content(sb.ToString());    // 傳回一段字串。 只有下拉式選單裡面的 各種<option>子選項
            //return sb.ToString();   // 自己測試用的
        }


