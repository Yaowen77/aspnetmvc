Attribute 為結尾



 [MyValidateDateRange(MyStartDate = "1/1/1950", MyEndDate = "1/1/2025", ErrorMessage = "日期區間，只能在1950年以後~2025年之前")]
 public DateTime? UserBirthDay { get; set; }


  寫一個 MyValidateDateRangeAttribute.cs 

public class MyValidateDateRangeAttribute : ValidationAttribute
    {

        public string MyStartDate { get; set; }  
        public string MyEndDate { get; set; }

        protected override ValidationResult IsValid(object value, ValidationContext validationContext)
        {
                
            DateTime dt = (DateTime)value;
            // 日期區間（起迄日）
            if (value != null && dt >= Convert.ToDateTime(MyStartDate) && dt <= Convert.ToDateTime(MyEndDate))
            {
                return ValidationResult.Success;   // 驗證成功
            }
            else
            {   // 第一種作法，驗證失敗會出現這一句錯誤訊息。
                //return new ValidationResult("[自訂驗證 的 錯誤訊息] 抱歉∼日期區間，不符合或超出範圍");

                //第二種作法，這裡使用空字串（""）。驗證失敗就會使用 UserTable.cs裡面的 [ ErrorMessage=""] 錯誤訊息
                return new ValidationResult("");
            }

    }

如果要直接在DB類別檔加 ": IValidatableObject"  另外在類別檔裡面直接設private
public partial class UserTable : IValidatableObject   
    {     
}


       private string MyStartDate = "1950/1/1";
        private string MyEndDate = "2020/1/1";
        
        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            List<ValidationResult> results = new List<ValidationResult>();   //可以將多個錯誤訊息放在這裡

            // ****** 請自己修改 **************************************** (start)
            // 日期區間（起迄日）
            if (UserBirthDay != null && UserBirthDay >= Convert.ToDateTime(MyStartDate) && UserBirthDay <= Convert.ToDateTime(MyEndDate))
            {
                // 驗證成功
            }
            else
            {   // 驗證失敗可以出現多句錯誤訊息。                    
                results.Add(new ValidationResult("[自訂驗證模型 的 .Validate() 錯誤訊息] #1 抱歉∼日期區間，不符合或超出範圍", new[] { "1" }));
                results.Add(new ValidationResult("[自訂驗證模型 的 .Validate() 錯誤訊息] #2", new[] { "2" }));
            }
            // ****** 請自己修改 **************************************** (end)           

            return results;
        }
    }
}